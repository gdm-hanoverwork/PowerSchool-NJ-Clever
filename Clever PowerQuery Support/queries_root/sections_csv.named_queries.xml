<queries>
    <query name="com.hanovertwpschools.core.clever.sections" coreTable="sections" flattened="true" tags="">
        <summary>Clever Sections Export (sections.csv)</summary>
        <description>Clever - Sections List - Current Year</description>
        <columns>
			<column column="sections.id" description="000_Section_id">000_Section_id</column>
			<column column="courses.course_number" description="Course_number">001_Course_number</column>
			<column column="schools.school_number" description="School_id">002_School_id</column>
			<column column="teachers.users_dcid" description="Teacher_id">003_Teacher_id</column>
			<column column="teachers.users_dcid" description="Teacher_2_id">004_Teacher_2_id</column>
			<column column="teachers.users_dcid" description="Teacher_3_id">005_Teacher_3_id</column>
			<column column="teachers.users_dcid" description="Teacher_4_id">006_Teacher_4_id</column>
			<column column="teachers.users_dcid" description="Teacher_5_id">007_Teacher_5_id</column>
			<column column="teachers.users_dcid" description="Teacher_6_id">008_Teacher_6_id</column>
			<column column="teachers.users_dcid" description="Teacher_7_id">009_Teacher_7_id</column>
			<column column="teachers.users_dcid" description="Teacher_8_id">010_Teacher_8_id</column>
			<column column="teachers.users_dcid" description="Teacher_9_id">011_Teacher_9_id</column>
			<column column="teachers.users_dcid" description="Teacher_10_id">012_Teacher_10_id</column>
			<column column="sections.section_number" description="Section_number">013_Section_number</column>
			<column column="courses.course_name" description="Grade">014_Grade</column>
			<column column="courses.course_name" description="Course_name">015_Course_name</column>
			<column column="courses.course_name" description="Course_description">016_course_description</column>
			<column column="sections.external_expression" description="Period">017_Period</column>
			<column column="courses.course_name" description="subject">018_Subject</column>
			<column column="terms.abbreviation" description="Term_name">019_Term_name</column>
			<column column="terms.abbreviation" description="Term_start">020_Term_start</column>
			<column column="terms.abbreviation" description="Term_end">021_Term_end</column>
        </columns>
        <sql>
            <![CDATA[
SELECT
	Clever.SectionID,
	Clever.Course_Number,
	Clever.SchoolID,
	Clever.Teacher_ID,
	Clever.Teacher_2_ID,
	Clever.Teacher_3_ID,
	Clever.Teacher_4_ID,
	Clever.Teacher_5_ID,
	Clever.Teacher_6_ID,
	Clever.Teacher_7_ID,
	Clever.Teacher_8_ID,
	Clever.Teacher_9_ID,
	Clever.Teacher_10_ID,
	Clever.Section_Number,
	Clever.grade,
	Clever.Course_Name,
	Clever.course_description,
	Clever.period,
	Clever.subject,
	Clever.Term_Name,
	Clever.Term_Start,
	Clever.Term_End
FROM
	(
		SELECT
			Sections.ID AS SectionID,
			Sections.Course_Number,
			Sections.Section_Number,
			sections.external_expression period,
			Courses.Course_Name,
			Sections.SchoolID,
			Teachers.Users_DCID,
			CASE
				WHEN Terms.isYearRec = 1 THEN 'Year'
				ELSE Terms.Abbreviation
			END AS Term_Name,
			TO_CHAR(Terms.FirstDay, 'MM/DD/YYYY') AS Term_Start,
			TO_CHAR(Terms.LastDay, 'MM/DD/YYYY') AS Term_End,
			CASE
				WHEN RoleDef.RoleKey = 'com.pearson.powerschool.coteach.primary.teacher' THEN 1
				ELSE ROW_NUMBER() OVER (
					PARTITION BY Sections.ID
					ORDER BY
						NULL
				)
			END AS PriorityOrder,
			to_char(sections.grade_level) AS grade,
			'' subject,
			'' course_description
		FROM
			Sections
			JOIN Courses ON LOWER(Sections.Course_Number) = LOWER(Courses.Course_Number)
			JOIN Prefs Prefs ON Prefs.Name = 'coursearchiveyear'
			CROSS JOIN RoleDef
			JOIN SectionTeacher ON Sections.ID = SectionTeacher.SectionID
			AND RoleDef.ID = SectionTeacher.RoleID
			JOIN Teachers ON SectionTeacher.TeacherID = Teachers.ID
			JOIN Terms ON Sections.SchoolID = Terms.SchoolID
			AND Sections.TermID = Terms.ID
			AND TO_NUMBER(Prefs.Value) = Terms.YearID
		WHERE
			/* Ensure current assignment or lead teacher only */
			(
				TRUNC(SYSDATE) BETWEEN SectionTeacher.Start_Date
				AND SectionTeacher.End_Date
				OR Sections.Teacher = SectionTeacher.TeacherID
			)
			/*  Exclude undesired courses - best practice would be to use a (custom) field
			 to track courses like these so you don't have to update the SQL */
			AND Courses.Course_Name NOT IN (
				'Cafe Duty',
				'Hall Duty/Coverage',
				'Staff Lunch',
				'Staff Pref',
				'Team Planning 6',
				'Team Planning 7',
				'Team Planning 8'
			)
			/*  Exclude undesired co-teaching roles - DO NOT put the Lead Teacher key here!
			 The RoleDef.Name is also indexed, so you might prefer to use that for checking
			 vs. the keys, especially if you plan to include customized co-teaching roles. */
			AND RoleDef.RoleKey NOT IN (
				'com.pearson.powerschool.coteach.class.observer',
				/* 'com.pearson.powerschool.coteach.job.share.teacher', */
				'com.pearson.powerschool.coteach.teacher.aide'
			)
			/*  Ensures at least one student is enrolled - optionally, you can use the
			 Sections.No_of_Students field, but that depends on calculations done
			 by Reset Class Counts/nightly process/etc. */
			AND EXISTS (
				SELECT
					1
				FROM
					CC
				WHERE
					CC.SectionID = Sections.ID
			)
			/*
			 AND EXISTS ( select 1 from CC where sectionteacher.sectionid = abs(cc.sectionid) )
			 */
		ORDER BY
			Sections.ID,
			CASE
				WHEN RoleDef.RoleKey = 'com.pearson.powerschool.coteach.primary.teacher' THEN 1
				ELSE Teachers.Users_DCID
			END
	) PIVOT (
		MAX(Users_DCID) FOR PriorityOrder IN (
			1 AS teacher_id,
			2 AS teacher_2_id,
			3 AS teacher_3_id,
			4 AS teacher_4_id,
			5 AS teacher_5_id,
			6 AS teacher_6_id,
			7 AS teacher_7_id,
			8 AS teacher_8_id,
			9 AS teacher_9_id,
			10 AS teacher_10_id
		)
	) Clever
ORDER BY
	sectionid

		]]>
        </sql>
    </query>
</queries>
